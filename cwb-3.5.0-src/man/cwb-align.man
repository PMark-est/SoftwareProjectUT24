.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CWB-ALIGN 1"
.TH CWB-ALIGN 1 "2022-07-22" "3.5.0" "IMS Open Corpus Workbench"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cwb\-align \- A simple sentence alignment program for CWB\-encoded corpora
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBcwb-align\fR [\-vh] [\-r \fIregistry_dir\fR] [\-s \fIx\fR] [\-w \fIn\fR]
    [\-P \fIattribute\fR] [\-S \fIattribute\fR | \-V \fIattribute\fR]
    \-o \fIfilename\fR \fIsource_corpus\fR \fItarget_corpus\fR \fIgrid_attribute\fR
    [\-C:\fIweight\fR] [\-S:\fIweight\fR:\fIratio\fR] [\-W:\fIweight\fR:\fIfile\fR]
    [\-1:\fIweight\fR] [\-2:\fIweight\fR] [\-3:\fIweight\fR] [\-4:\fIweight\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcwb-align\fR is a simple program for aligning units in parallel corpora. That is, given two
corpora in two different languages, where one (the \fItarget corpus\fR) is a translation of the other (the 
\&\fIsource corpus\fR), and where each corpus contains an s\-attribute that divides the corpus up into fairly
short units (for example, sentences), then \fBcwb-align\fR will work out a \*(L"best guess\*(R" as to which units
in the source corpus correspond to which units in the target corpus. \fBcwb-align\fR is also capable
of exploiting \fIpre-alignment\fR, that is, working only within the bounds of known-equivalent
regions of the corpus as defined by some other s\-attribute.
.PP
\&\fBcwb-align\fR is \fInot\fR intended to represent the state-of-the-art in alignment software; rather it is
intended to provide a basic, fallback option for users of parallel corpora who do not have access to more
advanced tools. While it will in many cases do a decent job of aligning, say, a pair of Romance or Germanic
languages with a lot of similar vocabulary, it will work much less well if asked to align, say, French and 
Chinese.
.PP
\&\fBcwb-align\fR's alignment engine works by measuring a similarity score for pairs of units (i.e. sentences)
from the two corpora. This similarity score can be based on a number of different criteria:
.IP "\(bu" 4
The length of each corpus segment, measured in characters.
.IP "\(bu" 4
The presence of shared words across the two corpora (ignoring case and accents).
.IP "\(bu" 4
The presence of shared letter sequences (for spotting \fIsimilar but not identical\fR words).
.IP "\(bu" 4
The presense of words specified as translation equivalents 
(a file containing the list of word-pairs must be provided by the user)
.PP
The features used by the alignment engine to compute similarity can be configured by the user by means of
the available \fIconfiguration flags\fR. It is also possible to specify the relative weight placed on each feature.
The default configuration is to use all the above criteria \fIexcept\fR the last.
.PP
\&\fBcwb-align\fR is called as follows: first the command line options, if any, are specified;
then the three compulsory arguments (\fIsource_corpus\fR, \fItarget_corpus\fR, \fIgrid_attribute\fR) are given; 
finally, configuration flags for the alignment engine are added after these arguments.
.PP
\&\fIsource_corpus\fR is the name of the source corpus, \fItarget_corpus\fR is the name of the target corpus, 
and \fIgrid_attribute\fR is the s\-attribute used as the alignment grid (typically, an s\-attribute that
represents sentences). It is important to note that
the s\-attribute specified for use as the grid attribute must exist, and must have the same name, 
in both the source \s-1AND\s0 target corpora). If, for instance, sentences are represented as \f(CW\*(C`<s\*(C'\fR> in one corpus
but as \f(CW\*(C`<sent\*(C'\fR> in the other, then they cannot be aligned by this program.
.PP
The possible options and configuration flags are specified in the following two sections of this manual.
.PP
\&\fBcwb-align-show\fR will look for the two aligned corpora in the registry directory, as usual. If a registry
location is not specified with the \fB\-r\fR option, then either a directory specified by the \s-1CORPUS_REGISTRY\s0
environment variable, or \s-1CWB\s0's built-in default registry will be used.
.SH "OPTIONS"
.IX Header "OPTIONS"
Please note that no \s-1CWB\s0 programs currently support GNU-style \f(CW\*(C`\-\-long\-options\*(C'\fR.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Displays \fBcwb-align\fR's help message, with short information about the usage of the command line options.  
This usage message will be also shown if \fBcwb-align\fR is called with invalid options.
After the usage message is printed, \fBcwb-align\fR will exit.
.IP "\fB\-o\fR \fIfilename\fR" 4
.IX Item "-o filename"
Specifies the filename to which the program's output should be written. If this option is not used,
then the default destination file \f(CW\*(C`out.align\*(C'\fR is used.
.Sp
If the filename given ends in \f(CW\*(C`.gz\*(C'\fR, the output will be automatically compressed using \fBgzip\fR.
.IP "\fB\-q\fR" 4
.IX Item "-q"
Activates quiet mode; many progress messages will be suppressed.
.IP "\fB\-P\fR \fIattribute\fR" 4
.IX Item "-P attribute"
Specifies the p\-attribute whose content should be analysed to establish the alignment
(using the criteria of shared words, shared letter sequencies, and so on). 
By default, the \f(CW\*(C`word\*(C'\fR attribute is analysed.
.IP "\fB\-r\fR \fIregistry_dir\fR" 4
.IX Item "-r registry_dir"
Specifies that the registry files for the two aligned corpora are located in \fIregistry_dir\fR,
instead of the standard registry. If this option is not specified, then a directory 
specified by the \s-1CORPUS_REGISTRY\s0 environment variable will be used; if that is not available, 
the built-in \s-1CWB\s0 default will be used.
.IP "\fB\-s\fR \fIx\fR" 4
.IX Item "-s x"
Sets the 2:2 split alignment factor to \fIx\fR.
.Sp
This factor determines the treatment of detected alignments between 
a group of two sentences (or other segments) in the source corpus and a group of two sentences in the target 
corpus, that is 2:2 alignments. When a 2:2 alignment is found, it is always possible that it really consists of
two 1:1 alignments (first sentence in source => first sentence in target, second sentence in source => second 
sentence in target). \fBcwb-align\fR will only output a 2:2 alignment if the quality score for the 2:2 
alignment exceeds the \fIcombined\fR quality scores of the two separate 1:1 by at least this factor. 
Otherwise, \fBcwb-align\fR will instead output the two 1:1 alignments.
.Sp
The default split alignment factor is 1.2, i.e. the 2:2 alignment will be accepted if its score
is at least 1.2 times greater than the combined scores of the two 1:1 alignments within it.
.Sp
If you find that the program consistently outputs 2:2 alignments when it should be outputting 1:1 alignemnts, 
you should experiment with increasing this factor; if the program does not output 2:2 alignments when it
ought to, then you should experiment with decreasing this factor.
.IP "\fB\-S\fR \fIattribute\fR" 4
.IX Item "-S attribute"
\&\*(L"Pre-alignment\*(R" means that some correspondences are already known \- an example use case would be
where both corpora are made up of a sequence of \fItexts\fR where there is a one-to-one correspondence
between texts, but the correspondence between sentence \fIwithin\fR each text remain to be determined 
by \fBcwb-align\fR.
.Sp
This option specifies that such a pre-aligned s\-attribute is available and should be used. Note
that a pre-aligned s\-attribute must have the same name (\s-1ID\s0 label) in both corpora, just like
the \*(L"grid\*(R" s\-attribute.
.Sp
When \fB\-S\fR is used, it is assumed that the pre-aligned S\-attribute has an equal number of instances
in the source and target corpora, and that instance \fIx\fR in the source corresponds to instance \fIx\fR 
in the target. That is, the links between the pairs of regions are determined solely by their appearance
in identical order in the source and target corpora.
.Sp
Please note that only one of \fB\-S\fR and \fB\-V\fR may be specfied (since it makes no sense for there to be 
\&\fIboth\fR types of pre-alignment). If both are specified, or one is specfied multiple times, all but
the last specification will be ignored.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Activates verbose mode. In this mode, additional progress information is printed on standard output in the course
of the calculation of the alignment.
.IP "\fB\-V\fR \fIattribute\fR" 4
.IX Item "-V attribute"
See discussion of \fB\-S\fR above for general comments on pre-alignment.
.Sp
The \fB\-V\fR option is used if an
s\-attribute exists that pre-aligns the corpora, just like \fB\-S\fR. The difference is that whereas with \fB\-S\fR 
the pre-aligned regions in the two corpora are linked by virtue of appearing in the same order in both corpora, 
with \fB\-V\fR the pre-aligned regions are linked by having identical annotation strings. In this case, it is not
necessary for matching regions to occur in the same order in source and target corpora.
.Sp
Naturally \fB\-V\fR can only be used if the pre-alignment s\-attribute is one that has annotations.
.IP "\fB\-w\fR \fIn\fR" 4
.IX Item "-w n"
Specifies the \fIbeam width\fR used when calculating alignments. The default is 50. It is usually safe to use the default value.
.SH "CONFIGURATION FLAGS"
.IX Header "CONFIGURATION FLAGS"
Configuration flags specify what kinds of features the alignment engine should use in assessing the similarity of
possibly-equivalent regions in the two corpora. Only the types of feature that you specify here will be used (the
exception is that, if you give \fIno\fR configuration flags at all, then a default list of feature-types will
be used \- see below).
.PP
There are four basic kinds of features: the size of the alignment regions, shared words, shared within-word
letter sequences, and the presence of corresponding words from a translation-equivalents list.
.PP
The configuration flags \fIalso\fR specify how much weight should be placed on the corresponding sets of features:
every flag is followed by a colon and then an integer indicating the weight factor; the higher this is, the
more effect that set of features has on the final similarity measurement, relative to the other features.
Typically, you would want to put more weight on shared words or shared translation-equivalents than
on shared letter sequences.
.PP
The full specification of the possible configuration flags is as follows:
.IP "\fB\-C:<\f(BIweight>\fB\fR" 4
.IX Item "-C:<weight>"
Specifies that the lengths of the two possibly-equivalent regions (in characters) should be used as a feature
for the similarity measurement, with the specified weight.
.IP "\fB\-S:<\f(BIweight>\fB:<\f(BIthreshold>\fB\fR" 4
.IX Item "-S:<weight>:<threshold>"
Specifies that the appearance of the same words in the two possibly-equivalent regions should be used as
features for the similarity measurement, with the specified weight. You would normally want to include
shared words as a feature with a high weight, as the presence of a lot of the same words in a section of the
source corpus and a section of the target corpus is one of the strongest possible indicators that they are
parallel to one another.
.Sp
As well as the weight, you must also specify a \fIthreshold\fR. The threshold is intended to make sure that the 
frequencies of the shared word in the source and target corpus sections are not too dissimilar. In the
case of \*(L"false friends\*(R", i.e. words with the same orthographic form that are not actually translation-equivalent,
we would not expect the word-form to have similar overall corpus frequencies in the two corpora; 
but for \*(L"true friends\*(R" we \fIwould\fR expect similar corpus frequencies. 
The \fIthreshold\fR specifies a minimum proportion of the total frequency across both corpora that must be found
in each corpus for a word-form to be used as a similarity feature.
.Sp
So, for instance, the default threshold is 0.4 (see below for more on default configuration). 
This means that a word-form will only be used as a feature for measuring similarity if each corpus contains
at least 40% of the total frequency across both corpora.
.Sp
(To put it formally:  frequency ratios f1/(f1+f2) and f2/(f1+f2) must be greater than \fI<threshold\fR> .)
.Sp
Note that all comparisons for this same-word type of feature are (a) case-sensitive and (b) diacritic-sensitive. 
That is, the word-forms must be absolutely identical. Case\- and diacrictic-insensitive matching is done by the
letter-sequence feature type (see below).
.IP "\fB\-1:<\f(BIweight>\fB\fR" 4
.IX Item "-1:<weight>"
Specifies that the appearance of shared one-letter sequences within words in the two possibly-equivalent regions
should be used as features for the similarity measurement, with the specified weight.
.Sp
The configuration flags \f(CW\*(C`\-1, \-2, \-3, \-4\*(C'\fR all specify the use of letter sequences as features, and they all
work in the same way; the following general comments apply to all four of these flags.
.Sp
Sub-word letter-sequence matching allows the presence of \fIsimilar but not identical\fR words to count as a factor
in similarity. Such words are often \fIorthogrpahic cognates\fR that are likely to be translation equivalents and
thus evidence that the pair of regions under analysis really are equivalent.
The longer the letter sequence, the more impressive the evidence (so you would normally weight \f(CW\*(C`\-4\*(C'\fR
more heavily than \f(CW\*(C`\-3\*(C'\fR, and so on; the default configuration (see below) does not include \f(CW\*(C`\-1\*(C'\fR and \f(CW\*(C`\-2\*(C'\fR at all).
.Sp
When letter saequences are compared, the comparison is case-insensitive and diacritic-insensitive.
.Sp
Only the letters \f(CW\*(C`A\*(C'\fR to \f(CW\*(C`Z\*(C'\fR are counted for the comparison; numbers, punctuation and any other symbol will be
ignored. This means that the letter-sequence features are of no use at all, and should not be used,
if either or both of the corpora is in a language that does not use the Latin alphabet.
.IP "\fB\-2:<\f(BIweight>\fB\fR" 4
.IX Item "-2:<weight>"
Specifies that the appearance of shared two-letter sequences within words in the two possibly-equivalent regions
should be used as features for the similarity measurement, with the specified weight. 
(For general comments about letter sequences, see \f(CW\*(C`\-1\*(C'\fR above.)
.IP "\fB\-3:<\f(BIweight>\fB\fR" 4
.IX Item "-3:<weight>"
Specifies that the appearance of shared three-letter sequences within words in the two possibly-equivalent regions
should be used as features for the similarity measurement, with the specified weight. 
(For general comments about letter sequences, see \f(CW\*(C`\-1\*(C'\fR above.)
.IP "\fB\-4:<\f(BIweight>\fB\fR" 4
.IX Item "-4:<weight>"
Specifies that the appearance of shared four-letter sequences within words in the two possibly-equivalent regions
should be used as features for the similarity measurement, with the specified weight. 
(For general comments about letter sequences, see \f(CW\*(C`\-1\*(C'\fR above.)
.IP "\fB\-W:<\f(BIweight>\fB:<\f(BIfilename>\fB\fR" 4
.IX Item "-W:<weight>:<filename>"
Specifies that the appearance of defined translation-equivalent words in the two possibly-equivalent regions 
should be used as features for the similarity measurement, with the specified weight.
.Sp
The file containing the translation equivalents must use the same character encoding as the two corpora;
character encoding errors will result in \fBcwb-align\fR aborting. It should be formatted as follows: 
one pair of words per line; the source-language word first, then a space, then the target-language equivalent.
(Words cannot have any whitespace within them: such wordforms are allowed in p\-attributes, 
but the aligner can't make use of them.)
.Sp
A weight must be given if this configuration flag is used. Normally you would want transaltion equivalents 
to be weighted similarly to shared words (weight 50 by default).
.PP
The default configuration (if no flags are specified) is \f(CW\*(C`\-C:1\ \-S:50:0.4\ \-3:3\ \-4:4\*(C'\fR.
.PP
This means that, by default, the following sets of feature are used: (1) length of sentence, with weight 1;
(2) presence of shared words, with weight 50 and threshold 0.4; (3) shared three-letter sequences, with
weight 3; (4) shared four-letter sequences, with weight 4.
.SH "OUTPUT FORMAT"
.IX Header "OUTPUT FORMAT"
\&\fBcwb-align\fR's output file uses \s-1CWB\s0's \f(CW\*(C`.align\*(C'\fR file format. \f(CW\*(C`.align\*(C'\fR files are \s-1ASCII\s0 text files (although
they may contain characters from another encoding if the corpus IDs include non-ASCII characters), 
formatted as follows.
.PP
The first line is a header line, which contains the following four elements, separated by tabs:
.IP "\(bu" 4
The \s-1ID\s0 of the source corpus
.IP "\(bu" 4
The \s-1ID\s0 of the aligned s\-attribute (the \fIgrid attribute\fR \- see above)
.IP "\(bu" 4
The \s-1ID\s0 of the target corpus
.IP "\(bu" 4
The \s-1ID\s0 of the aligned s\-attribute (repeated)
.PP
Following the header, each individual line represents
a single pair of aligned regions in the corpus.
This is specified by six fields of information,
separated by tabs. The six fields are as follows:
.IP "\(bu" 4
The \fIbeginning\fR of the range in the source corpus (expressed as a cpos, i.e. a token number)
.IP "\(bu" 4
The \fIend\fR of the range in the source corpus (expressed as a cpos)
.IP "\(bu" 4
The \fIbeginning\fR of the range in the target corpus (expressed as a cpos)
.IP "\(bu" 4
The \fIend\fR of the range in the target corpus (expressed as a cpos)
.IP "\(bu" 4
The \fItype\fR of alignment: 1:1, 2:1, 1:2 or 2:2
.IP "\(bu" 4
The \fIquality\fR of the alignment: a score calculated by the alignment engine
.PP
For example,
.PP
.Vb 1
\&  140    169    137    180    1:2
.Ve
.PP
means that corpus position ranges [140,169] and [137,180] form a 1:2 alignment pair.
.PP
(The final field, the \fIquality\fR, is optional in this file format, and is absent in the example above;
however, \fBcwb-align\fR will always provide it.)
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\fB\s-1CORPUS_REGISTRY\s0\fR" 4
.IX Item "CORPUS_REGISTRY"
If set, this environment variable specifies the location of the corpus registry directory. 
The \s-1CORPUS_REGISTRY\s0 is overruled by the \fB\-r\fR option, if present; if neither of these means
of specifying the registry is used, then the built-in \s-1CWB\s0 default registry location will be used.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cqp, cqpserver, cwb-align-show, cwb-align-encode, cwb-align-decode, cwb-describe-corpus.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.IP " \fB\s-1IMS\s0 Open Corpus Workbench (\s-1CWB\s0)\fR <http://cwb.sourceforge.net/>" 4
.IX Item " IMS Open Corpus Workbench (CWB) <http://cwb.sourceforge.net/>"
.PD 0
.IP " Copyright (C) 1993\-2006 by \s-1IMS,\s0 University of Stuttgart" 4
.IX Item " Copyright (C) 1993-2006 by IMS, University of Stuttgart"
.IP " Copyright (C) 2007\- by the respective contributers (see file \fI\s-1AUTHORS\s0\fR)" 4
.IX Item " Copyright (C) 2007- by the respective contributers (see file AUTHORS)"
.PD
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation; either version 2, or (at your option) any later version.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT
ANY WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS
FOR A PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0 General Public License for more details
(in the file \fI\s-1COPYING\s0\fR, or available via \s-1WWW\s0 at
<http://www.gnu.org/copyleft/gpl.html>).
