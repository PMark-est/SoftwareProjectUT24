.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CWB-ALIGN-ENCODE 1"
.TH CWB-ALIGN-ENCODE 1 "2022-07-22" "3.5.0" "IMS Open Corpus Workbench"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cwb\-align\-encode \- Add an alignment attribute to an existing CWB corpus
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBcwb-align-encode\fR [\-DCRvh] [\-d \fIdata_dir\fR] [\-r \fIregistry_dir\fR] 
    \fIalignment_file\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcwb-align-encode\fR encodes an alignment attribute (a\-attribute) for an existing corpus. A\-attributes
represent the correspondences between pairs of regions in two corpora which contain 
translation-equivalent text in two languages. Typical use for a\-attributes is to
link a pair of s\-attributes that represent sentences in the two corpora.
.PP
Unlike other attributes, a\-attributes cannot be created at the time of initial indexing of the corpus text files,
because an a\-attribute presupposes the existence of both the corpus to which it is to be added,
and the corpus that is the target of the alignment.
.PP
\&\fBcwb-align-encode\fR reads its input from a \f(CW\*(C`.align\*(C'\fR file.  Compressed files with extension
\&\f(CW\*(C`.gz\*(C'\fR or \f(CW\*(C`.bz2\*(C'\fR are automatically decompressed.
.PP
The \f(CW\*(C`.align\*(C'\fR file format uses CWB-internal corpus positions to identify
aligned regions of the corpus.  It is therefore recommended not to generate
such input files manually. Rather, it is better to generate them
automatically.
.PP
If your parallel corpus is not already aligned, you can use the \fBcwb-align\fR program to
perform the alignment and generate the \f(CW\*(C`.align\*(C'\fR file.
.PP
Alternatively, if your parallel corpus is already aligned, you can use the \fBcwb-align-import\fR
utility from the Perl/CWB package. This utiltiy imports external
alignment files which reference regions on s\-attributes by annotated \s-1ID\s0 codes (cf. \f(CW\*(C`man cwb\-align\-import\*(C'\fR);
it also automatically encodes the imported data into an a\-attribute, so that if you use \fBcwb-align-import\fR,
you do not need to also use \fBcwb-align-encode\fR.
.PP
If you \fIdo\fR need to create a \f(CW\*(C`.align\*(C'\fR file yourself, it \fImust\fR comply with the definition of this file format.
.PP
You can use \fBcwb-align-show\fR, q.v., to inspect the contents of the \f(CW\*(C`.align\*(C'\fR file prior to encoding it.
.PP
The IDs of the two aligned corpora are specified within the \f(CW\*(C`.align\*(C'\fR file itself. \fBcwb-align-encode\fR will look 
for these corpora in the registry directory, as usual. If a registry
location is not specified with the \fB\-r\fR option, then either a directory specified by the \s-1CORPUS_REGISTRY\s0
environment variable, or \s-1CWB\s0's built-in default registry will be used.
.SH "ADDING A REGISTRY ENTRY"
.IX Header "ADDING A REGISTRY ENTRY"
Like all attributes, the a\-attribute that you encode must be declared in the registry file of the corpus it
belongs to. A\-attributes link two corpora, but they are deemed to \*(L"belong to\*(R" the first of the pair, which
we call the \fIsource corpus\fR (while the second of the pair is the \fItarget corpus\fR). 
For that reason, the a\-attribute must be declared in the registry file of the
source corpus.
.PP
An a\-attribute declaration consists of a single line, starting with \f(CW\*(C`ALIGNED\*(C'\fR, followed by the name
of the a\-attribute. Unlike other kinds of attribute, you cannot choose a name for an a\-attribute;
an a\-attribute's name is always the same as the \s-1ID\s0 of the  target corpus. So, the line that you
should add to the registry file of the source corpus is as follows.
.PP
.Vb 1
\&        ALIGNED my_target_corpus
.Ve
.PP
with the actual \s-1ID\s0 of the target corpus in place of \fImy_target_corpus\fR \- note that it is the lowercase
version of the \s-1ID\s0 that is used here!
.PP
It is also possible to use  the CWB/Perl tools to alter the registry file automatically.
The command for this is as follows:
.PP
.Vb 1
\&        cwb\-regedit MY_SOURCE_CORPUS :add :a my_target_corpus
.Ve
.PP
Finally, note that you must add the registry entry \fIbefore\fR encoding the a\-attribute with \fBcwb-align-encode\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
Please note that no \s-1CWB\s0 programs currently support GNU-style \f(CW\*(C`\-\-long\-options\*(C'\fR.
.IP "\fB\-C\fR" 4
.IX Item "-C"
Activates \*(L"compatibility mode\*(R". By default, \s-1CWB\s0 uses an index format called \*(L"extended alignment\*(R" for 
a\-attributes. Earlier versions of \s-1CWB\s0 used a different format which allowed fewer types of alignment
relationship. If you want your a\-attribute to be usable with very old versions of the \s-1CWB\s0 software
(\fBnot\fR recommended!) you need to encode it in compatibility mode; this causes \fIboth\fR the new-style
extended alignment data structure, \fIand\fR the old-style data structure to be created.
.Sp
If you always use \s-1CWB\s0 v3.0 or higher (recommended! as older versions are no longer supported)
then you have no need of compatibility mode.
.IP "\fB\-d\fR \fIdata_dir\fR" 4
.IX Item "-d data_dir"
Specifies the directory where the data files making up the a\-attribute are to be placed. 
An alignment attribute consists of an \f(CW\*(C`.alx\*(C'\fR file (and an \f(CW\*(C`.alg\*(C'\fR file if compatibility mode
is enabled); you cannot choose the names of these files, only their location, using this option
or \fB\-D\fR.  Note that if you specify a data directory different from that declared as \f(CW\*(C`HOME\*(C'\fR in
the source corpus registry file, other \s-1CWB\s0 programs such as \s-1CQP\s0 will not be able to find the 
alignment data.
.Sp
At least one \- and only one \- of the \fB\-D\fR and \fB\-d\fR options must be specified.
.IP "\fB\-D\fR" 4
.IX Item "-D"
Specifies that the data files making up the encoded a\-attribute should be placed in the corpus data 
directory specified in the registry file of the source corpus.
.Sp
Note that the source corpus is the first one mentioned in the header line of the \f(CW\*(C`.align\*(C'\fR file.
.Sp
At least one \- and only one \- of the \fB\-D\fR and \fB\-d\fR options must be specified.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Displays \fBcwb-align-encode\fR's help message, with short information about the usage of the command line options.  
This usage message will be also shown if \fBcwb-align-encode\fR is called with invalid options.
After the usage message is printed, \fBcwb-align-encode\fR will exit.
.IP "\fB\-r\fR \fIregistry_dir\fR" 4
.IX Item "-r registry_dir"
Specifies that the registry files for the two aligned corpora are located in \fIregistry_dir\fR,
instead of the standard registry. If this option is not specified, then a directory 
specified by the \s-1CORPUS_REGISTRY\s0 environment variable will be used; if that is not available, 
the built-in \s-1CWB\s0 default will be used.
.IP "\fB\-R\fR" 4
.IX Item "-R"
Enables \*(L"reverse\*(R" mode. In this mode, the source and target corpora are reversed. Normally, the source
corpus is the \fIfirst\fR corpus specified in the header line of the input file, and the targe corpus is
mentioned \fIsecond\fR; each row of the input file specifies regions fo the source and target corpora in that
same order. If the \fB\-R\fR option is specified, then the \fIsecond\fR corpus is the source corpus, and the
\&\fIfirst\fR corpus is the target corpus.
.Sp
This option works by swapping the source and target ranges of each alignment bead, so it can only be
used if there are no crossing alignment beads.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Activates verbose mode. In this mode, information about the encoding process is printed to standard output.
.SH "INPUT FORMAT"
.IX Header "INPUT FORMAT"
The input to \fBcwb-align-encode\fR is identical to the output format of \fBcwb-align\fR, that is, the \f(CW\*(C`.align\*(C'\fR format.
.PP
This format is described in full in the \fB\s-1OUTPUT FORMAT\s0\fR section of the manual page for \fBcwb-align\fR,
which should be available alongside this page.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\fB\s-1CORPUS_REGISTRY\s0\fR" 4
.IX Item "CORPUS_REGISTRY"
If set, this environment variable specifies the location of the corpus registry directory. 
The \s-1CORPUS_REGISTRY\s0 is overruled by the \fB\-r\fR option, if present; if neither of these means
of specifying the registry is used, then the built-in \s-1CWB\s0 default registry location will be used.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cqp, cqpserver, cwb-align, cwb-align-show, cwb-align-decode, cwb-describe-corpus, 
cwb-s-decode, cwb-lexdecode, cwb-align-decode, cwb-scan-corpus.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.IP " \fB\s-1IMS\s0 Open Corpus Workbench (\s-1CWB\s0)\fR <http://cwb.sourceforge.net/>" 4
.IX Item " IMS Open Corpus Workbench (CWB) <http://cwb.sourceforge.net/>"
.PD 0
.IP " Copyright (C) 1993\-2006 by \s-1IMS,\s0 University of Stuttgart" 4
.IX Item " Copyright (C) 1993-2006 by IMS, University of Stuttgart"
.IP " Copyright (C) 2007\- by the respective contributers (see file \fI\s-1AUTHORS\s0\fR)" 4
.IX Item " Copyright (C) 2007- by the respective contributers (see file AUTHORS)"
.PD
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation; either version 2, or (at your option) any later version.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT
ANY WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS
FOR A PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0 General Public License for more details
(in the file \fI\s-1COPYING\s0\fR, or available via \s-1WWW\s0 at
<http://www.gnu.org/copyleft/gpl.html>).
