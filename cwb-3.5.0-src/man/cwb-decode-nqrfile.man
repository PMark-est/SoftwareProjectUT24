.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CWB-DECODE-NQRFILE 1"
.TH CWB-DECODE-NQRFILE 1 "2022-05-07" "3.5.0" "IMS Open Corpus Workbench"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cwb\-decode\-nqrfile \- Decode CWB's binary file format for named query results
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBcwb-decode-nqrfile\fR [\-h] [+h] \fIfile\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This program decodes the contents of a saved \s-1CQP\s0 query (or a \*(L"subcorpus\*(R": query results and
subcorpora are essentially the same thing, since both represent a collection of subsets
of token positions in the corpus). These are called \*(L"named query results\*(R" because they
are created by storing a query as a named variable in \s-1CQP,\s0 and then issuing the \f(CW\*(C`save\*(C'\fR command
for that named variable.
.PP
The resulting file is a binary file consisting of sets of integers representing the \*(L"zones\*(R"
within the corpus that matched the original query. The \fBcwb-decode-nqrfile\fR utility
processes this file, and prints out the corpus positions as \s-1ASCII\s0 integers on standard output.
.PP
When \fBcwb-decode-nqrfile\fR is invoked, a full (relative or absolute) path to \fIfile\fR must be
specified. \fBcwb-decode-nqrfile\fR does not know anything about the corpus registry or about
\&\s-1CQP\s0's data directory settings.
.PP
Alternatively, \fIfile\fR can be given as \f(CW\*(C`\-\*(C'\fR , in which \fBcwb-decode-nqrfile\fR will read data
from standard input.
.SH "OPTIONS"
.IX Header "OPTIONS"
Please note that the \s-1CWB\s0 utilities do not currently support GNU-style \f(CW\*(C`\-\-long\-options\*(C'\fR.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Turn off \*(L"print-header\*(R" mode.
.IP "\fB+h\fR" 4
.IX Item "+h"
Turns on \*(L"print-header\*(R" mode. Note that the default is for this mode to be switched on,
so this option is not usually needed.
.SH "OUTPUT FORMAT"
.IX Header "OUTPUT FORMAT"
First, a header is printed (if \*(L"print-header\*(R" mode is on!). This contains three fields:
.IP "\s-1REGISTRY\s0" 4
.IX Item "REGISTRY"
The path to the registry directory of the original corpus.
.IP "O_NAME" 4
.IX Item "O_NAME"
The name of the original corpus on which the query was carried out.
.IP "\s-1SIZE\s0" 4
.IX Item "SIZE"
The number of intervals in this subcorpus (= number of results in a query).
.PP
After that, a number of lines equal to \s-1SIZE\s0 are printed. Each line contains
two integers, separated by a tab, which represent the start and end points
of the intervals wihtin the original corpus that are included in this
subcorpus.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cqp, cqpcl, cqpserver, cwb-describe-corpus, cwb-decode, cwb-scan-corpus.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
\&\fB\s-1IMS\s0 Open Corpus Workbench (\s-1CWB\s0)\fR <http://cwb.sourceforge.net/>
.PP
Copyright (C) 1993\-2006 by \s-1IMS,\s0 University of Stuttgart
.PP
Copyright (C) 2007\- by the respective contributers (see file \fI\s-1AUTHORS\s0\fR)
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation; either version 2, or (at your option) any later version.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT
ANY WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS
FOR A PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0 General Public License for more details
(in the file \fI\s-1COPYING\s0\fR, or available via \s-1WWW\s0 at
<http://www.gnu.org/copyleft/gpl.html>).
